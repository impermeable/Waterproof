language: node_js

os:
  - linux
#  - osx
#  - windows

node_js:
  - node

stages:
  - lint
  - unit
  - test
  - deploy

jobs:
  include:
  - stage: lint
    script: npm run lint
  - stage: unit
    script: npm run test:unit
  - stage: test
    script: npx xvfb-maybe npm run test-start
  - stage: deploy
    if: tag IS present
    os: linux
    services: docker
    language: generic

    script:
      - |
        docker run --rm \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        -v ~/dist_electron/:/root/dist_electron \
        electronuserland/builder:wine \
        /bin/bash -c "npm ci && npm run electron:generate-icons && npx vue-cli-service electron:build --config electron-builder.json --publish never -lw"

  - stage: deploy
    if: tag IS present
    os: osx
    osx_image: xcode10.2
    env:
      - ELECTRON_CACHE=$HOME/.cache/electron
      - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    language: node_js
    node_js: node
    script: npm ci && npm run electron:generate-icons && npx vue-cli-service electron:build --config electron-builder.json --publish never -m

cache:
  npm: true
  directories:
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

deploy:
  provider: releases
  skip_cleanup: true
  api_key: "$GITHUB_TOKEN"
  file_glob: true
  file:
  - dist_electron/*.AppImage
  - dist_electron/*.exe
  - dist_electron/*.dmg
  on:
    tags: true
    stage: deploy
    branch: master

env:
  global:
    secure: cpyX4rAxApGy7c20ZInazQDKXpUgpmUcN6jWJGHxWxEbvYHEPrnBTjEapSHrYB/Q9Svwku045rV7HTxlGNSlt985ejJ+QHRd7qofc8EDmwTXGysAx/XVbWP9fBF96H27ErBlNq3Sd2ct26zubRmJd7Mpv73E3ndFl/BvO/d8BuUv8WET6a2/uRRrPuJVpCc9zOe3/5paPsG4bIcxQhzSzpLnrQG9IzCXi/5s3xCYr07/rp8BI6ojwTpQ/aUOtd5how7EzM3Ce0CREZxTjN33IH47j8DZLl1f4MhzPTtxtdeKUEEelqy67EErfb2Jcf0u098QtWSG/Sp+0dZOZm4IiiLBs+qqw1sXGgVGieq5AFmq70yZ3CyD1aIKukYVJxbDSK55kjMnheDmdCdass4+LRQ4VezdfrYXlQ2zM4/y3xympAn2ysfDb4XxbvcicvPEiPumtwVfr3WPbLGGqlb69rVJwna4MzefySDXzU15fbVs62iQyB6TLlA0aUNjPI3ocxTNkeR0Yu0WvQDsr6D9RZsHyq7SjtUiDHfJxE4KXSRTjsYUICueOCDQBDUxXIqPEDg9dZSEP0Nt6fa7940DryqJ93QZl8IwRgKPkB7A//XmCnKBE6yq9F1SWwxNuDEHzj5MF4y+XYWjT8+r3xXvo6G45LqFOwlhP4SvepNhZNo=
