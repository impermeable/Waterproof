name: build-latest

on:
  workflow_dispatch

jobs:
  lint-test-run:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: Build distrubtable version on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: small-npm-deps-${{ matrix.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: small-npm-deps-${{ matrix.os }}
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm ci
      - name: Generate icons
        run: npm run electron:generate-icons

      - name: Build it (signed)
        if: ${{ matrix.os == 'windows-latest' }}
        env:
          CSC_LINK: 'certificate\certificate.pfx'
          CSC_KEY_PASSWORD: ${{ secrets.CODE_SIGNING_CERTIFICATE_PASS }}
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate\certificate.txt -Value '${{ secrets.CODE_SIGNING_CERTIFICATE }}'
          certutil -decode certificate\certificate.txt certificate\certificate.pfx
          npm run electron:build
          Remove-Item -Path certificate\*
          
      - name: Build it (no signing)
        if: ${{ matrix.os != 'windows-latest' }}
        run: npm run electron:build

      - run: npm install @actions/core @actions/glob
      - name: Locate completed builds
        id: locate
        run: node scripts/actions/match-glob.js dist_electron/*.AppImage dist_electron/*.exe dist_electron/*.dmg
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.locate.outputs.name }}
          path: |
            dist_electron/*.AppImage
            dist_electron/*.exe
            dist_electron/*.dmg
          retention-days: 5
          if-no-files-found: error
